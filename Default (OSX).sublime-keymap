[
  { "keys": ["ctrl+shift+."], "command": "erb", "context":
    [
      { "key": "selector", "operator": "equal", "operand": "text.html.ruby, text.html.erb, text.haml, source.yaml, source.css, source.scss, source.js, source.coffee" }
    ]
  },
  {"keys": ["ctrl+shift+r"], "command": "set_file_type",
     "args": {"syntax": "Packages/Ruby/Ruby.tmLanguage"}
  },

//  Change default Alignment keyboard shortcut
  { "keys": ["super+ctrl+shift+a"], "command": "alignment" },

// Key bindings for Sublime built in case transform commands
  { "keys": ["super+alt+t"], "command": "title_case" },
  { "keys": ["super+alt+u"], "command": "upper_case" },
  { "keys": ["super+alt+l"], "command": "lower_case" },

  // The following key binding require SideBarEnhancements plugin to work
  // This allows to duplicate, rename, move, delete the current file with a simple shortcut
  { "keys": ["super+ctrl+shift+d"], "command": "side_bar_duplicate" },
  { "keys": ["super+ctrl+shift+r"], "command": "side_bar_rename" },
  { "keys": ["super+ctrl+shift+m"], "command": "side_bar_move" },
  { "keys": ["super+ctrl+shift+x"], "command": "side_bar_delete" },

// Key bindings for Sublime built in layout commands

  // increases size of left pane
  {
    "keys": ["super+alt+shift+right"],
    "command": "set_layout",
    "args":
    {
      "cols": [0.0, 0.66, 1.0],
      "rows": [0.0, 1.0],
      "cells": [[0, 0, 1, 1], [1, 0, 2, 1]]
    }
  },

  // increases size of right pane
  {
    "keys": ["super+alt+shift+left"],
    "command": "set_layout",
    "args":
    {
      "cols": [0.0, 0.33, 1.0],
      "rows": [0.0, 1.0],
      "cells": [[0, 0, 1, 1], [1, 0, 2, 1]]
    }
  },

// The following key binding require BracketHighlighter plugin to work
  // Select text inside brackets or quotes
  {
      "keys": ["ctrl+super+s"],
      "command": "bh_key",
      "args":
      {
          "lines" : true,
          "plugin":
          {
              "type": ["__all__"],
              "command": "bh_modules.bracketselect"
          }
      }
  },

  // Select text inside brackets or quotes including brackets or quotes
  {
      "keys": ["ctrl+shift+super+s"],
      "command": "bh_key",
      "args":
      {
          "lines" : true,
          "plugin":
          {
              "type": ["__all__"],
              "command": "bh_modules.bracketselect",
              "args": {"always_include_brackets": true}
          }
      }
  },

  // Go to left bracket or quote
  {
      "keys": ["ctrl+super+left"],
      "command": "bh_key",
      "args":
      {
          "lines" : true,
          "plugin":
          {
              "type": ["__all__"],
              "command": "bh_modules.bracketselect",
              "args": {"select": "left"}
          }
      }
  },

  // Go to right bracket or quote
  {
      "keys": ["ctrl+super+right"],
      "command": "bh_key",
      "args":
      {
          "lines" : true,
          "plugin":
          {
              "type": ["__all__"],
              "command": "bh_modules.bracketselect",
              "args": {"select": "right"}
          }
      }
  },

  // Remove brackets or quotes
  {
      "keys": ["ctrl+super+r"],
      "command": "bh_remove_brackets"
  },
  // Convert single quote string to double quoted string and vice versa
    // Will handle escaping or unescaping quotes within the string
  {
      "keys": ["ctrl+super+'"],
      "command": "bh_key",
      "args":
      {
          "lines" : true,
          "plugin":
          {
              "type": ["single_quote", "double_quote", "py_single_quote", "py_double_quote"],
              "command": "bh_modules.swapquotes"
          }
      }
  },
  // Swap brackets with another type
  {
      "keys": ["ctrl+super+9"],
      "command": "swap_brackets"
  },


// The following key binding require TrailingSpaces plugin to work
  { "keys": ["ctrl+super+t"], "command": "delete_trailing_spaces" },

// The following key binding require Ruby Block Converter plugin to work
  // Switch braces to do end block
  {
      "keys": ["ctrl+shift+]"],
      "command": "brace_to_do_end"
  },
  // Switch do end block to braces
  {
      "keys": ["ctrl+shift+["],
      "command": "do_end_to_brace"
  }
]
